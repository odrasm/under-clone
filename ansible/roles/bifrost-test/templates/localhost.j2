---
# The ironic API URL for bifrost operations.  Defaults to localhost.
# ironic_url: "http://localhost:6385/"

# The network interface that bifrost will be operating on.  Defaults
# to virbr0 in roles, can be overridden here.
network_interface: "{{ underground_deploy_network_interface }}"

# password to use between services
#service_password: aSecretPassword473z
# mysql_username: Default mysql admin username
mysql_username: root
# mysql_password: Default mysql admin user password
mysql_password:

# The path to the SSH key to be utilized for testing and burn-in
# to configuration drives. When set, it should be set in both baremetal
# and localhost groups, however this is only an override to the default.
# ssh_public_key_path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"

# If testing is true, then the environment is setup for using libvirt
# virtual machines for the hardware instead of real hardware.
# testing: true

# The default port to download files via.  Required for IPA URL generation.
# Presently the defaults are located in the roles, however if changed both
# the localhost and baremetal group files must be updated.
# file_url_port: 8080

# IPA Image parameters.  If these are changed, they must be changed in
# Both localhost and baremetal groups.  Presently the defaults
# in each role should be sufficient for proper operation.
{% raw %}
# ipa_kernel: "{{http_boot_folder}}/ipa.kernel"
# ipa_ramdisk: "{{http_boot_folder}}/ipa.initramfs"
# ipa_kernel_url: "http://{{ hostvars[inventory_hostname]['ansible_' + network_interface]['ipv4']['address'] }}:{{file_url_port}}/ipa.kernel"
# ipa_ramdisk_url: "http://{{ hostvars[inventory_hostname]['ansible_' + network_interface]['ipv4']['address'] }}:{{file_url_port}}/ipa.initramfs"
{% endraw %}

# The http_boot_folder defines the root folder for the webserver.
# If this setting is changed, it must be applied to both the baremetal
# and localhost groups. Presently the role defaults are set to the value
# below.
# http_boot_folder: /httpboot

# The settings for the name of the image to be deployed along with the
# on disk location are below.  If changed, these settings must be applied
# to both the baremetal and localhost groups.  If the file is already on
# disk, then the image generation will not take place, otherwise an image
# will be generated using diskimage-builder.
# deploy_image_filename: "deployment_image.qcow2"
{% raw %}
# deploy_image: "{{http_boot_folder}}/{{deploy_image_filename}}"
{% endraw %}

# Setting to utilize diskimage-builder to create a bootable image.
create_image_via_dib: "{{ not use_cirros | default(false) | bool }}"
dib_image_type: vm

# Create IPA image instead of downloading an pre-made IPA image.
create_ipa_image: false

# Dnsmasq default route for clients. If not defined, dnsmasq will push to
# clients as default route the same IP of the dnsmasq server.
# Default: undefined
{% raw %}
# dnsmasq_router: "{{ ipv4_gateway }}"
{% endraw %}

# Dnsmasq default nameserver for clients. If not defined, this setting
# will be ignored.
# Default: undefined
dnsmasq_dns_servers: "{{ underground_dnsmasq_dns_servers }}"

# CUSTOM
#ipa_kernel_upstream_url: "https://tarballs.opendev.org/openstack/ironic-python-agent/dib/files/ipa-centos8-master.initramfs"
#ipa_ramdisk_upstream_url: "https://tarballs.opendev.org/openstack/ironic-python-agent/dib/files/ipa-centos8-master.kernel"
#ipa_kernel_upstream_checksum_url: "https://tarballs.opendev.org/openstack/ironic-python-agent/dib/files/ipa-centos8-master.initramfs.sha256"
#ipa_ramdisk_upstream_checksum_url: "https://tarballs.opendev.org/openstack/ironic-python-agent/dib/files/ipa-centos8-master.kernel.sha256"
#ipa_file_protocol: "http"
#ipa_upstream_release: "master"
#ipa_kernel_upstream_checksum_url:  ""
#ipa_ramdisk_upstream_checksum_url: ""

# DIB
#dib_os_element: "ubuntu"
#dib_os_release: "bionic"
#dib_offline: "true"
#dib_elements: "base vm enable-serial-console cloud-init-nocloud"
#dib_init_element: "simple-init"
#dib_init_element: "cloud-init"
#dib_packages: "python-dev,openssh-server"

# NETWORK
dhcp_pool_start: "{{ underground_dhcp_pool_start }}"
dhcp_pool_end: "{{ underground_dhcp_pool_end }}"
#dhcp_lease_time: "12h"
#dhcp_static_mask: "255.255.255.0"

# ENV
#enable_venv: "true"
#bifrost_venv_dir: "/opt/stack/bifrost"
#ironic_tftp_master_path: "/httpboot/master_images"

# OPTIONAL
staging_drivers_include: "true"
cleaning: "true"
cleaning_disk_erase: "false"
enabled_hardware_types: "ipmi,ilo,staging-libvirt"
enabled_management_interfaces: "redfish,ilo,ipmitool,staging-libvirt"
enabled_power_interfaces: "redfish,ilo,ipmitool,staging-libvirt"
enable_uefi_ipxe: "true"
enable_inspector: "true"
enable_inspector_discovery: "true"
#enable_conductor: "false"
inventory_dhcp: "true"
inventory_dns: "true"
#upper_constraints_file: "/test.txt"
#constraints_extra_args: false
#pip_opts: "{{ lookup('env', 'PIP_OPTS') | default('') }}"
