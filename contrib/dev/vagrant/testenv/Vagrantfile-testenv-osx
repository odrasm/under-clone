# -*- mode: ruby -*-
# vi: set ft=ruby :

#ENV['VAGRANT_EXPERIMENTAL'] = 'disks'
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"

  # Disable default synced folder
  config.vm.synced_folder '.', '/vagrant', disabled: false

  # Sync all source project
  config.vm.synced_folder "../../..", "/usr/local/src/underground", type: "nfs"

  # Create a private network
  config.vm.network "private_network", ip: "192.168.33.10", nic_type: "virtio"

  # Create a baremetal network
  config.vm.network "private_network", ip: "192.168.55.10", nic_type: "virtio", auto_config: true

  config.vm.provider :virtualbox do |vb|
    # Use Host DNS for VPN
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # Nested Virtualisation
    #vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
    vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all", "--nicpromisc3", "allow-all"]
    vb.memory = 8192
    vb.cpus = 2

  config.disksize.size = '100GB'
  #config.vm.disk :disk, size: "100GB", primary:true

  end

  # Initialize VM
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get install -y python3-pip git
    git clone -b stable/victoria https://opendev.org/openstack/bifrost
    rm -f /home/vagrant/baremetal-inventory.json
    rm -f /home/vagrant/ironic.yml
    bifrost/bifrost-cli testenv --release victoria --count 1 --memory 4096 --disk 20 --domain-type qemu --driver ipmi -o ironic.yml
    bifrost/bifrost-cli install --testenv --release victoria --hardware-types ipmi --cleaning-disk-erase -e install_dib=true
    ln -s /opt/stack/bifrost/bin/ansible-playbook /usr/local/bin
    ln -s /opt/stack/bifrost/bin/disk-image-create /usr/local/bin
    mkdir -p /var/log/underground
    chmod 777 /var/log/underground
    /usr/local/bin/ansible-playbook -i /usr/local/src/underground/ansible/inventory/aio -e underground_action=build -e underground_baremetal_image=fluctus -e dib_imagesize=3G -e dib_imagename=/httpboot/deployment_image.qcow2 /usr/local/src/underground/ansible/site.yml -t dib
    md5sum /httpboot/deployment_image.qcow2 > /httpboot/deployment_image.qcow2.CHECKSUMS
    ssh-keygen -q -t rsa -N '' <<< ""$'\n'"y" >/dev/null 2>&1
    source /opt/stack/bifrost/bin/activate ; source /home/vagrant/openrc ; BIFROST_INVENTORY_SOURCE=/home/vagrant/baremetal-inventory.json ansible-playbook -vvvv -i /home/vagrant/bifrost/playbooks/inventory/bifrost_inventory.py /home/vagrant/bifrost/playbooks/enroll-dynamic.yaml
    source /opt/stack/bifrost/bin/activate ; source /home/vagrant/openrc ; BIFROST_INVENTORY_SOURCE=/home/vagrant/baremetal-inventory.json ansible-playbook -vvvv -i /home/vagrant/bifrost/playbooks/inventory/bifrost_inventory.py /home/vagrant/bifrost/playbooks/deploy-dynamic.yaml
    echo "PER GUARDARE OUTPUT DEL DISKIMAGECREATE: vagrant ssh -c 'sudo tail /var/log/underground/fluctus.log  -n 1000 -F'"
    echo "PER GUARDARE OUTPUT DEL DEPLOY: vagrant ssh -c 'sudo tail /var/log/libvirt/baremetal_logs/testvm1_console.log -F'"
  SHELL

end
